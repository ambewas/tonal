"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[764],{8832:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=s(7624),r=s(2172);const i={title:"Notes",sidebar_position:2},o=void 0,a={id:"notes",title:"Notes",description:"tonal",source:"@site/docs/notes.md",sourceDirName:".",slug:"/notes",permalink:"/tonal/docs/notes",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/notes.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Notes",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/tonal/docs/"},next:{title:"Intervals",permalink:"/tonal/docs/intervals"}},c={},d=[{value:"Note properties",id:"note-properties",level:2},{value:"<code>Note.get</code>",id:"noteget",level:3},{value:"<code>get(noteName: string) =&gt; Note</code>",id:"getnotename-string--note",level:4},{value:"<code>Note.fromMidi</code>",id:"notefrommidi",level:3},{value:"<code>fromMidi(midi: number) =&gt; string</code>",id:"frommidimidi-number--string",level:4},{value:"<code>Note.fromFreq</code>",id:"notefromfreq",level:3},{value:"<code>Note.fromFreq(freq: number) =&gt; string</code>",id:"notefromfreqfreq-number--string",level:4},{value:"Transposition and distances",id:"transposition-and-distances",level:2},{value:"<code>Note.transpose</code>",id:"notetranspose",level:3},{value:"<code>transpose(note: string, interval: string) =&gt; string</code>",id:"transposenote-string-interval-string--string",level:4},{value:"<code>Note.transposeFifths</code>",id:"notetransposefifths",level:3},{value:"<code>transposeFifths(noteName: string, fifths: number) =&gt; string</code>",id:"transposefifthsnotename-string-fifths-number--string",level:4},{value:"<code>Note.distance</code>",id:"notedistance",level:3},{value:"<code>distance(from: string, to: string) =&gt; string</code>",id:"distancefrom-string-to-string--string",level:4},{value:"Named collections",id:"named-collections",level:2},{value:"<code>Note.names</code>",id:"notenames",level:3},{value:"<code>names(array?: any[]) =&gt; string[]</code>",id:"namesarray-any--string",level:4},{value:"<code>Note.sortedNames</code>",id:"notesortednames",level:3},{value:"<code>sortedNames(array?: any[], comparator?: NoteComparator) =&gt; string[]</code>",id:"sortednamesarray-any-comparator-notecomparator--string",level:4},{value:"<code>Note.sortedUniqNames</code>",id:"notesorteduniqnames",level:3},{value:"<code>sortedUniqNames(array?: any[]) =&gt; string[]</code>",id:"sorteduniqnamesarray-any--string",level:4},{value:"Enharmonics",id:"enharmonics",level:2},{value:"<code>Note.simplify</code>",id:"notesimplify",level:3},{value:"<code>simplify(noteName: string) =&gt; string</code>",id:"simplifynotename-string--string",level:4},{value:"<code>Note.enharmonic</code>",id:"noteenharmonic",level:3},{value:"<code>enharmonic(noteName: string, pitchClass?: string) =&gt; string</code>",id:"enharmonicnotename-string-pitchclass-string--string",level:4}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{src:"https://img.shields.io/badge/@tonaljs-note-yellow.svg?style=flat-square",alt:"tonal"}),"\n",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/@tonaljs/note",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/npm/v/@tonaljs/note.svg?style=flat-square",alt:"npm version"})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import { Note } from "tonal";\n\nNote.get("C4"); // => { midi: 60 ...}\nNote.name("fx4"); // => "F##4"\nNote.pitchClass("Ab5"); // => "Ab"\nNote.octave("C4"); // => 4\nNote.midi("A4"); // => 69\nNote.fromMidi(61); // => "Db4"\nNote.enharmonic("C#"); // => "Db"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"note-properties",children:"Note properties"}),"\n",(0,t.jsx)(n.h3,{id:"noteget",children:(0,t.jsx)(n.code,{children:"Note.get"})}),"\n",(0,t.jsx)(n.h4,{id:"getnotename-string--note",children:(0,t.jsx)(n.code,{children:"get(noteName: string) => Note"})}),"\n",(0,t.jsx)(n.p,{children:"Given a note name, it returns an object with the following properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"name: the note name"}),"\n",(0,t.jsx)(n.li,{children:"pc: the pitch class name"}),"\n",(0,t.jsx)(n.li,{children:"letter: the note letter"}),"\n",(0,t.jsx)(n.li,{children:"step: the letter number (0..6)"}),"\n",(0,t.jsx)(n.li,{children:"acc: the note accidentals"}),"\n",(0,t.jsx)(n.li,{children:"alt: the accidental number (..., -1 = 'b', 0 = '', 1 = '#', ...)"}),"\n",(0,t.jsx)(n.li,{children:"oct: the octave (or null if not present)"}),"\n",(0,t.jsx)(n.li,{children:"chroma: the note chroma (0..11)"}),"\n",(0,t.jsx)(n.li,{children:"midi: the note midi or null if octave is not present"}),"\n",(0,t.jsx)(n.li,{children:"freq: the note frequency in Hertzes, or null if the octave is not present"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.get("C4"); // => { name: "C4", midi: 60, ... }\n'})}),"\n",(0,t.jsx)(n.p,{children:"It has several shorthands to retrieve properties easily:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.name("fx4"); // => "F##4"\nNote.pitchClass("Ab5"); // => "Ab"\nNote.accidentals("Eb"); // => \'Eb\'\nNote.octave("C4"); // => 4\nNote.midi("A4"); // => 69\nNote.freq("A4"); // => 440\nNote.chroma("D"); // => 2\n\n["C", "D", "E"].map(Note.chroma); // => [0, 2, 4]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"notefrommidi",children:(0,t.jsx)(n.code,{children:"Note.fromMidi"})}),"\n",(0,t.jsx)(n.h4,{id:"frommidimidi-number--string",children:(0,t.jsx)(n.code,{children:"fromMidi(midi: number) => string"})}),"\n",(0,t.jsxs)(n.p,{children:["Given a midi number, returns the note name. This function is the same as ",(0,t.jsx)(n.code,{children:"midiToNoteName"})," from ",(0,t.jsx)(n.a,{href:"notation/midi",children:"@tonaljs/midi"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.fromMidi(61); // => "Db4"\nNote.fromMidi(61.7); // => "D4"\n[60, 61, 62].map(Note.fromMidi); // => ["C4", "Db4", "D4"]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["There's also a ",(0,t.jsx)(n.code,{children:"Note.fromMidiSharps"})," version:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.fromMidiSharps(61); // => "C#4"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"notefromfreq",children:(0,t.jsx)(n.code,{children:"Note.fromFreq"})}),"\n",(0,t.jsx)(n.h4,{id:"notefromfreqfreq-number--string",children:(0,t.jsx)(n.code,{children:"Note.fromFreq(freq: number) => string"})}),"\n",(0,t.jsx)(n.p,{children:"Given a frequency in Hz, returns the note name."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.fromFreq(440); // => "A4"\n'})}),"\n",(0,t.jsx)(n.p,{children:"It rounds to the nearest name:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"[440, 550, 660].map(t.Note.fromFreq); // => [ 'A4', 'Db5', 'E5' ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["There's also a ",(0,t.jsx)(n.code,{children:"Note.fromFreqSharps"})," version:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"[440, 550, 660].map(t.Note.fromFreqSharps); // => [ 'A4', 'C#5', 'E5' ]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"transposition-and-distances",children:"Transposition and distances"}),"\n",(0,t.jsx)(n.h3,{id:"notetranspose",children:(0,t.jsx)(n.code,{children:"Note.transpose"})}),"\n",(0,t.jsx)(n.h4,{id:"transposenote-string-interval-string--string",children:(0,t.jsx)(n.code,{children:"transpose(note: string, interval: string) => string"})}),"\n",(0,t.jsx)(n.p,{children:'Transpose a note by an interval. It returns the note name or "" if not valid parameters.'}),"\n",(0,t.jsx)(n.p,{children:"Examples:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.transpose("d3", "3M"); // => "F#3"\nNote.transpose("D", "3M"); // => "F#"\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"transposeBy"})," and ",(0,t.jsx)(n.code,{children:"transposeFrom"})," are currified versions of this function to make easy work with arrays:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'["C", "D", "E"].map(Note.transposeBy("5P"));\n// => ["G", "A", "B"]\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'["1P", "3M", "5P"].map(Note.transposeFrom("C"));\n// => ["C", "E", "G"]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"notetransposefifths",children:(0,t.jsx)(n.code,{children:"Note.transposeFifths"})}),"\n",(0,t.jsx)(n.h4,{id:"transposefifthsnotename-string-fifths-number--string",children:(0,t.jsx)(n.code,{children:"transposeFifths(noteName: string, fifths: number) => string"})}),"\n",(0,t.jsx)(n.p,{children:"Transpose a note a given number of fifths:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.transposeFifths("G4", 3); // => "E6"\nNote.transposeFifths("G", 3); // => "E"\n\n[0, 1, 2, 3, 4, 5, 6].map((n) => transposeFifths("F#", n));\n// => ["F#", "C#", "G#", "D#", "A#", "E#", "B#"]\n[0, -1, -2, -3, -4, -5, -6].map((n) => transposeFifths("Bb", n));\n// => ["Bb", "Eb", "Ab", "Db", "Gb", "Cb", "Fb"]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"notedistance",children:(0,t.jsx)(n.code,{children:"Note.distance"})}),"\n",(0,t.jsx)(n.h4,{id:"distancefrom-string-to-string--string",children:(0,t.jsx)(n.code,{children:"distance(from: string, to: string) => string"})}),"\n",(0,t.jsx)(n.p,{children:"Find the interval between two notes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.distance("C", "D").toEqual("2M");\nNote.distance("C3", "E3").toEqual("3M");\nNote.distance("C3", "E4").toEqual("10M");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"named-collections",children:"Named collections"}),"\n",(0,t.jsx)(n.h3,{id:"notenames",children:(0,t.jsx)(n.code,{children:"Note.names"})}),"\n",(0,t.jsx)(n.h4,{id:"namesarray-any--string",children:(0,t.jsx)(n.code,{children:"names(array?: any[]) => string[]"})}),"\n",(0,t.jsx)(n.p,{children:"Get note names of an array of anything. Notice that names are normalized:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.names(["fx", "bb", 12, "nothing", {}, null])) // => ["F##", "Bb"];\n'})}),"\n",(0,t.jsx)(n.p,{children:"Without parameters, it returns a list of natural pitch classes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.names(); // =>["C", "D", "E", "F", "G", "A", "B"]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"notesortednames",children:(0,t.jsx)(n.code,{children:"Note.sortedNames"})}),"\n",(0,t.jsx)(n.h4,{id:"sortednamesarray-any-comparator-notecomparator--string",children:(0,t.jsx)(n.code,{children:"sortedNames(array?: any[], comparator?: NoteComparator) => string[]"})}),"\n",(0,t.jsx)(n.p,{children:"Sort an array of note names in ascending order. Pitch classes are listed before notes. Anything that is not a note is removed:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.sortedNames(["c2", "c5", "c1", "c0", "c6", "c"]);\n// => [\'C\', \'C0\', \'C1\', \'C2\', \'C5\', \'C6\']\nNote.sortedNames(["c", "F", "G", "a", "b", "h", "J"]);\n// => [\'C\', \'F\', \'G\', \'A\', \'B\']\n'})}),"\n",(0,t.jsx)(n.p,{children:"An optional comparator can be passed as a second argument:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"Note.sortedNames([\"c2\", \"c5\", \"c1\", \"c0\", \"c6\", \"c\"], Note.descending);\n// => ['C6', 'C5', 'C2', 'C3', 'C1', 'C0']\n"})}),"\n",(0,t.jsx)(n.h3,{id:"notesorteduniqnames",children:(0,t.jsx)(n.code,{children:"Note.sortedUniqNames"})}),"\n",(0,t.jsx)(n.h4,{id:"sorteduniqnamesarray-any--string",children:(0,t.jsx)(n.code,{children:"sortedUniqNames(array?: any[]) => string[]"})}),"\n",(0,t.jsx)(n.p,{children:"Sort notes ascending and remove duplicates."}),"\n",(0,t.jsx)(n.h2,{id:"enharmonics",children:"Enharmonics"}),"\n",(0,t.jsx)(n.h3,{id:"notesimplify",children:(0,t.jsx)(n.code,{children:"Note.simplify"})}),"\n",(0,t.jsx)(n.h4,{id:"simplifynotename-string--string",children:(0,t.jsx)(n.code,{children:"simplify(noteName: string) => string"})}),"\n",(0,t.jsx)(n.p,{children:'Given a note name, return the same note with less accidentals (or "" if not a valid note):'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.simplify("C#"); // => "C#"\nNote.simplify("C##"); // => "D"\nNote.simplify("C###"); // => "D#"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"noteenharmonic",children:(0,t.jsx)(n.code,{children:"Note.enharmonic"})}),"\n",(0,t.jsx)(n.h4,{id:"enharmonicnotename-string-pitchclass-string--string",children:(0,t.jsx)(n.code,{children:"enharmonic(noteName: string, pitchClass?: string) => string"})}),"\n",(0,t.jsx)(n.p,{children:'Given a note name, returns its enharmonic (or "" if not valid note):'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.enharmonic("C#"); // => "Db"\nNote.enharmonic("C##"); // => "D"\nNote.enharmonic("C###"); // => "Eb"\n'})}),"\n",(0,t.jsx)(n.p,{children:"The destination pitch class can be enforced to calculate the octave:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.enharmonic("F2", "E#"); // => "E#2"\nNote.enharmonic("B2", "Cb"); // => "Cb3"\nNote.enharmonic("C2", "B#"); // => "B#1"\n'})}),"\n",(0,t.jsx)(n.p,{children:'Enforced pitch class must have the same chroma as the note, otherwise "" is returned:'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'Note.enharmonic("F2", "Eb"); // => ""\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},2172:(e,n,s)=>{s.d(n,{I:()=>a,M:()=>o});var t=s(1504);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);