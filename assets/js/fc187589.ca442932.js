"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[644],{788:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>a});var n=t(7624),i=t(2172);const c={title:"Pitch Class Sets",sidebar_position:2},r=void 0,l={id:"collections/pitch-class-sets",title:"Pitch Class Sets",description:"@tonaljs/pcset",source:"@site/docs/collections/pitch-class-sets.md",sourceDirName:"collections",slug:"/collections/pitch-class-sets",permalink:"/tonal/docs/collections/pitch-class-sets",draft:!1,unlisted:!1,editUrl:"https://github.com/tonaljs/tonal/tree/main/site/docs/docs/collections/pitch-class-sets.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Pitch Class Sets",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Modes",permalink:"/tonal/docs/collections/modes"},next:{title:"Collections",permalink:"/tonal/docs/collections/"}},o={},a=[{value:"Properties",id:"properties",level:2},{value:"<code>Pcset.get</code>",id:"pcsetget",level:3},{value:"<code>get(src: note[] | string | number)</code>",id:"getsrc-note--string--number",level:4},{value:"Notes and intervals",id:"notes-and-intervals",level:2},{value:"<code>Pcset.notes</code>",id:"pcsetnotes",level:3},{value:"<code>notes(pcset: string | number | string[]) =&gt; string[]</code>",id:"notespcset-string--number--string--string",level:4},{value:"Querying",id:"querying",level:2},{value:"<code>Pcset.isIncludedIn</code>",id:"pcsetisincludedin",level:3},{value:"<code>isIncludedIn(parent: Set) =&gt; (note: string) =&gt; boolean</code>",id:"isincludedinparent-set--note-string--boolean",level:4},{value:"<code>Pcset.isSubsetOf</code>",id:"pcsetissubsetof",level:3},{value:"<code>isSubsetOf(parent: Set) =&gt; (subset: Set) =&gt; boolean</code>",id:"issubsetofparent-set--subset-set--boolean",level:4},{value:"<code>Pcset.isSupersetOf</code>",id:"pcsetissupersetof",level:3},{value:"<code>isSupersetOf(subset: Set) =&gt; (parent: Set) =&gt; boolean</code>",id:"issupersetofsubset-set--parent-set--boolean",level:4}];function d(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"@tonaljs/pcset"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.img,{src:"https://img.shields.io/badge/@tonaljs-pcset-yellow.svg?style=flat-square",alt:"tonal"}),"\n",(0,n.jsx)(s.a,{href:"https://www.npmjs.com/package/@tonaljs/pcset",children:(0,n.jsx)(s.img,{src:"https://img.shields.io/npm/v/@tonaljs/pcset.svg?style=flat-square",alt:"npm version"})})]}),"\n",(0,n.jsx)(s.p,{children:"A pitch class set is a set (no repeated) of pitch classes (notes without octaves). Pitch classes are useful to identify musical structures (if two chords are related, for example)"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:'import { Pcset } from "tonal";\n'})}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"pcsetget",children:(0,n.jsx)(s.code,{children:"Pcset.get"})}),"\n",(0,n.jsx)(s.h4,{id:"getsrc-note--string--number",children:(0,n.jsx)(s.code,{children:"get(src: note[] | string | number)"})}),"\n",(0,n.jsx)(s.p,{children:"Given a collection of notes, a pitch class chroma string or a pitch class number, it returns a properties object with the following attributes:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"num: the set number. Each pitch class set can be represented by an unique name between 0 and 4096. Those are the possible combinations of 12 different elements (pitch classes)"}),"\n",(0,n.jsx)(s.li,{children:"chroma: the set number as binary string"}),"\n",(0,n.jsxs)(s.li,{children:["intervals: the list of intervals ",(0,n.jsx)(s.strong,{children:"starting from C"})]}),"\n",(0,n.jsx)(s.li,{children:"length: the number of notes"}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Example:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:'Pcset.get(["c", "d", "e"]);\n// =>\n// {\n//   num: 2688,\n//   chroma: "101010000000",\n//   intervals: ["1P", "2M", "3M"],\n//   length: 3\n// }\n'})}),"\n",(0,n.jsx)(s.p,{children:"It is possible to obtain the properties from chroma or set number. All this function calls returns the same object:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:'Pcset.get(["c", "d", "e"]);\nPcset.get(2688);\nPcset.get("101010000000");\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Several shorthands (",(0,n.jsx)(s.code,{children:"num"}),", ",(0,n.jsx)(s.code,{children:"chroma"}),", intervals`) are provided:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:'Pcset.chroma(["c", "d", "e"]); //=> "101010000000"\nPcset.num(["c", "d", "e"]); //=> 2192\n\n// several set representations are accepted\nPcset.chroma(2192); //=> "101010000000"\nPcset.num("101010000000"); // => 2192\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Intervals are always calculated from ",(0,n.jsx)(s.code,{children:"C"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:'Pcset.intervals(["c", "d", "e"]); // => ["1P", "5P", "7M"]\nPcset.intervals(["D", "F", "A"]); // => ["2M", "4P", "6M"]\n'})}),"\n",(0,n.jsx)(s.h2,{id:"notes-and-intervals",children:"Notes and intervals"}),"\n",(0,n.jsx)(s.h3,{id:"pcsetnotes",children:(0,n.jsx)(s.code,{children:"Pcset.notes"})}),"\n",(0,n.jsx)(s.h4,{id:"notespcset-string--number--string--string",children:(0,n.jsx)(s.code,{children:"notes(pcset: string | number | string[]) => string[]"})}),"\n",(0,n.jsx)(s.p,{children:"Given a pcset or a list of notes, it returns the sorted pitch class notes:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:'Pcset.notes(["D3", "A3", "Bb3", "C4", "D4", "E4", "F4", "G4", "A4"]); // => ["C", "D", "E", "F", "G", "A", "Bb"]\nPcset.notes("101011010110"); // => ["C", "D", "E", "F", "G", "A", "Bb"]\n'})}),"\n",(0,n.jsx)(s.h2,{id:"querying",children:"Querying"}),"\n",(0,n.jsx)(s.h3,{id:"pcsetisincludedin",children:(0,n.jsx)(s.code,{children:"Pcset.isIncludedIn"})}),"\n",(0,n.jsx)(s.h4,{id:"isincludedinparent-set--note-string--boolean",children:(0,n.jsx)(s.code,{children:"isIncludedIn(parent: Set) => (note: string) => boolean"})}),"\n",(0,n.jsx)(s.p,{children:"Test if a note is included in the given set. This function is currified:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:'const isInCTriad = isNoteIncludedIn(["C", "E", "G"]);\nisInCTriad("C4"); // => true\nisInCTriad("C#4"); // => false\n'})}),"\n",(0,n.jsx)(s.p,{children:"Keep in mind that enharmonics are included:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:'isInCTriad("Fb"); // => true\n'})}),"\n",(0,n.jsx)(s.h3,{id:"pcsetissubsetof",children:(0,n.jsx)(s.code,{children:"Pcset.isSubsetOf"})}),"\n",(0,n.jsx)(s.h4,{id:"issubsetofparent-set--subset-set--boolean",children:(0,n.jsx)(s.code,{children:"isSubsetOf(parent: Set) => (subset: Set) => boolean"})}),"\n",(0,n.jsx)(s.p,{children:"Test if a set is a subset of another. This function is currified"}),"\n",(0,n.jsx)(s.h3,{id:"pcsetissupersetof",children:(0,n.jsx)(s.code,{children:"Pcset.isSupersetOf"})}),"\n",(0,n.jsx)(s.h4,{id:"issupersetofsubset-set--parent-set--boolean",children:(0,n.jsx)(s.code,{children:"isSupersetOf(subset: Set) => (parent: Set) => boolean"})}),"\n",(0,n.jsx)(s.p,{children:"Test if a set is a superset of another. This function is currified"})]})}function h(e={}){const{wrapper:s}={...(0,i.M)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},2172:(e,s,t)=>{t.d(s,{I:()=>l,M:()=>r});var n=t(1504);const i={},c=n.createContext(i);function r(e){const s=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(c.Provider,{value:s},e.children)}}}]);